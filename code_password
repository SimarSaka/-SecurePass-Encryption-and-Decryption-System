#include <iostream>
#include <mysql/mysql.h> // MySQL Connector C++ header
#include <string>
#include <cctype> // For isalpha, isdigit
#include <windows.h> // For Sleep

using namespace std;

// Database connection credentials
const char* HOST = "localhost";
const char* USER = "root"; // Default XAMPP MySQL username
const char* PW = "";       // Default password (empty for XAMPP)
const char* DB = "mydb";   // Database name

// Login class
class Login {
private:
    string userId, userPW;

public:
    Login() : userId(""), userPW("") {}

    void setId(string id) {
        userId = id;
    }

    void setPW(string pw) {
        userPW = pw;
    }

    string getId() const {
        return userId;
    }

    string getPW() const {
        return userPW;
    }
};

// Encryption function for characters
char encryptCh(char ch, int shift) {
    if (isalpha(ch)) {
        char base = isupper(ch) ? 'A' : 'a';
        return (ch - base + shift + 26) % 26 + base;
    }
    if (isdigit(ch)) {
        return (ch - '0' + shift + 10) % 10 + '0';
    }
    return ch; // Return non-alphanumeric characters as-is
}

// Decryption function for characters
char decryptCh(char ch, int shift) {
    if (isalpha(ch)) {
        char base = isupper(ch) ? 'A' : 'a';
        return (ch - base - shift + 26) % 26 + base;
    }
    if (isdigit(ch)) {
        return (ch - '0' - shift + 10) % 10 + '0';
    }
    return ch; // Return non-alphanumeric characters as-is
}

// Encrypt a string
string encrypt(const string& password, int shift) {
    string encrypted = "";
    for (char ch : password) {
        encrypted += encryptCh(ch, shift);
    }
    return encrypted;
}

// Decrypt a string
string decrypt(const string& encrypted, int shift) {
    string decrypted = "";
    for (char ch : encrypted) {
        decrypted += decryptCh(ch, shift);
    }
    return decrypted;
}

// Retrieve password from the database
string DBPw(MYSQL* conn, const string& id) {
    string encryptedPW;
    string query = "SELECT PW FROM password WHERE Id='" + id + "'";
    
    if (mysql_query(conn, query.c_str())) {
        cout << "Error: " << mysql_error(conn) << endl;
        return "";
    } else {
        MYSQL_RES* res = mysql_store_result(conn);
        if (res) {
            MYSQL_ROW row = mysql_fetch_row(res);
            if (row) {
                encryptedPW = row[0];
            }
            mysql_free_result(res);
        }
    }
    return encryptedPW;
}

int main() {
    Login l;
    MYSQL* conn = mysql_init(NULL);

    // Connect to the MySQL database
    if (!mysql_real_connect(conn, HOST, USER, PW, DB, 3306, NULL, 0)) {
        cout << "Error: " << mysql_error(conn) << endl;
        return 1;
    } else {
        cout << "Connected to the database successfully!" << endl;
    }

    Sleep(2000);
    int shift = 3; // Shift value for Caesar cipher
    bool exit = false;

    while (!exit) {
        system("cls");
        cout << "1. Signup" << endl;
        cout << "2. Login" << endl;
        cout << "0. Exit" << endl;
        cout << "Enter Your Choice: ";
        int val;
        cin >> val;

        if (val == 1) {
            system("cls");
            string id, pw;
            cout << "Enter ID for Signup: ";
            cin >> id;
            l.setId(id);
            cout << "Enter a Strong Password: ";
            cin >> pw;
            l.setPW(pw);

            string encryptedPW = encrypt(l.getPW(), shift);

            // Insert into the database
            string query = "INSERT INTO password (Id, PW) VALUES ('" + l.getId() + "', '" + encryptedPW + "')";
            if (mysql_query(conn, query.c_str())) {
                cout << "Error: " << mysql_error(conn) << endl;
            } else {
                cout << "Signup successful!" << endl;
            }
            Sleep(3000);

        } else if (val == 2) {
            system("cls");
            string id, pw;
            cout << "Enter ID: ";
            cin >> id;
            cout << "Enter Password: ";
            cin >> pw;

            string getDB = DBPw(conn, id);
            if (!getDB.empty()) {
                string decryptedPW = decrypt(getDB, shift);
                if (decryptedPW == pw) {
                    cout << "Welcome, " << id << "!" << endl;
                } else {
                    cout << "Incorrect Password. Try Again." << endl;
                }
            } else {
                cout << "User ID Not Found. Try Again." << endl;
            }
            Sleep(3000);

        } else if (val == 0) {
            exit = true;
            cout << "Goodbye!" << endl;
        } else {
            cout << "Invalid Input. Try Again." << endl;
            Sleep(2000);
        }
    }

    mysql_close(conn);
    return 0;
}
